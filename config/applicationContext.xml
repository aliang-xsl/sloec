<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"  
	 xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop
	  http://www.springframework.org/schema/aop/spring-aop.xsd
	  
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd"
    
    default-autowire="byName">
   

    <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
  <bean name="dataSource"  class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialPoolSize" value="10" />
		<property name="minPoolSize" value="10" />
		<property name="maxPoolSize" value="50" />
  </bean>
	
	      
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
			</props>
		</property>
		<property name="packagesToScan" value="aliang.entity"></property>
	</bean>
	

	<!-- 包扫描 -->
	<context:component-scan base-package="aliang" />
	
	<!-- 事务管理器 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="txManager" >
	    <tx:attributes>
	    	<!-- propagation 事务传播行为
	    	      isolation  事务隔离级别
	    	      read-only 只读
	    	      no-rollback-for 发生哪些异常不回滚
	    	      rollback-for  发生哪些异常回滚
	    	      timeout 过期信息
	    	  -->
	    	<tx:method name="get*" read-only="true" />
			<tx:method name="query*" read-only="true" />
	        <tx:method name="*" propagation="REQUIRED"   />
	        <tx:method name="*" rollback-for="java.lang.Exception" read-only="false" />
	         
	    </tx:attributes>
	</tx:advice>
	
	<!-- 配置切面 -->
	<aop:config>
		<!-- 配置切入点 -->
	    <aop:pointcut id="serviceMethods"   expression="execution(* aliang.service..*Service.*(..))"/> 
	   	<!-- 配置切入面 -->
	    <aop:advisor pointcut-ref="serviceMethods" advice-ref="txAdvice"/> 
    </aop:config> 
	
    
	<import resource="classpath:springmvc.xml"/>
	<import resource="classpath:activiti-context.xml"/>


</beans>
